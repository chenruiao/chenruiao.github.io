<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Octopress | 冯威的个人博客]]></title>
  <link href="http://oec2003.github.io/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://oec2003.github.io/"/>
  <updated>2014-04-06T15:33:14+08:00</updated>
  <id>http://oec2003.github.io/</id>
  <author>
    <name><![CDATA[冯威]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Windows中搭建已存在的Octopress环境]]></title>
    <link href="http://oec2003.github.io/blog/2013/08/10/how-to-use-exist-octopress-in-windows/"/>
    <updated>2013-08-10T08:54:00+08:00</updated>
    <id>http://oec2003.github.io/blog/2013/08/10/how-to-use-exist-octopress-in-windows</id>
    <content type="html"><![CDATA[<p>当我们需要在不同的电脑上来对同一个Octopress博客进行维护的时候就需要针对已存在的Octopress来设置环境了，</p>

<h2>安装相应的软件：</h2>

<ol>
<li>Git：<a href="http://msysgit.googlecode.com/files/Git-1.8.1.2-preview20130201.exe">http://msysgit.googlecode.com/files/Git-1.8.1.2-preview20130201.exe </a></li>
<li>Ruby：<a href="http://files.rubyforge.vm.bytemark.co.uk/rubyinstaller/rubyinstaller-1.9.3-p429.exe">http://files.rubyforge.vm.bytemark.co.uk/rubyinstaller/rubyinstaller-1.9.3-p429.exe</a></li>
<li>DevKit：<a href="http://cloud.github.com/downloads/oneclick/rubyinstaller/DevKit-tdm-32-4.5.2-20111229-1559-sfx.exe">http://cloud.github.com/downloads/oneclick/rubyinstaller/DevKit-tdm-32-4.5.2-20111229-1559-sfx.exe</a></li>
<li>Python：<a href="http://www.python.org/ftp/python/2.7.5/python-2.7.5.msi">http://www.python.org/ftp/python/2.7.5/python-2.7.5.msi</a></li>
</ol>


<p>关于软件的安装在《<a href="http://www.cnblogs.com/oec2003/archive/2013/05/27/3100896.html">Windows下搭建Octopress博客</a>》中有详细的介绍。</p>

<!--more-->


<h2>拉Octopress代码到本地</h2>

<p>使用下面命令将已存在的Octopress代码拉到本地</p>

<p>```
git clone -b source git@github.com:oec2003/oec2003.github.com.git
git clone  git@github.com:oec2003/oec2003.github.com.git _deploy</p>

<p>```</p>

<h2>编写文章</h2>

<p>```
cd Octopress
rake new_post[&lsquo;new post title&rsquo;]
rake generate
rake preview
rake deploy</p>

<p>```</p>

<h2>推送到github</h2>

<p>```
cd Octopress
git add .
git commit -m &lsquo;message&rsquo;
git push origin source</p>

<p>```</p>

<h2>从github上获取最新</h2>

<p>比如在公司发布了一篇博文，回到家里想继续发博文，就需要先将github上的最新代码拉到本地：</p>

<p>```
cd Octopress
cd _deploy
git pull origin master
cd ..
git pull origin source</p>

<p>```</p>

<p>今天在家里的另一台电脑上进行生成文章时，发现当执行了命令<code>rake generate</code> 后，生成到public目录中相应的页面为空，没有任何内容，但在命令行中命令还是正常执行了，没有出现异常。最后查出原因是因为Python的安装目录没有添加到环境变量中。所以建议在准备环境时就就将git、ruby、python的安装目录都添加到环境变量中。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress博客设置]]></title>
    <link href="http://oec2003.github.io/blog/2013/06/26/octopress-blog-setting/"/>
    <updated>2013-06-26T22:02:00+08:00</updated>
    <id>http://oec2003.github.io/blog/2013/06/26/octopress-blog-setting</id>
    <content type="html"><![CDATA[<p>在上一篇《<a href="http://oec2003.github.io/blog/2013/05/26/how-to-crate-octopress-blog-in-windows/">Windows下搭建Octopress博客</a>》中介绍了怎样在Windows环境中搭建Octopress博客，以及如何部署到Github中，本文主要讲解怎样对Octopress进行一些设置，比如修改博客标题、添加侧边栏等等。</p>

<h2>Octopress文件目录</h2>

<p>首先来看下Octopress的文件目录吧，因为很多的设置就是从这里开始的。</p>

<p><img src="http://ww1.sinaimg.cn/mw690/3cefded1gw1e52yyb8jz7j207f0e5mxp.jpg" alt="" /></p>

<p>刚clone下来的Octopress源码没有最后的三个文件，当执行了rake install后会产生最后的三个目录。</p>

<ul>
<li><p>source：该目录是执行<code>rake install</code>后从<code>.themes\classic</code>目录中的source拷贝而来，并且添加了一个<em>posts目录了，当执行了<code>rake new_post['title']</code>后会在</em>post生成博文的markdown文件。包括后面的很多设置页是在该目录中进行；</p></li>
<li><p>sass：也是在执行<code>rake install</code>后从<code>.themes\classic</code>目录中的source拷贝而来。Sass 扩展了 CSS3，增加了规则、变量、混入、选择器、继承等等特性。Sass 生成良好格式化的 CSS 代码，易于组织和维护。</p></li>
<li><p>public：刚clone源码时public是个空目录，当执行了<code>rake generate</code>后会编译source的内容然后将编译后的内容复制到public目录中，在执行<code>rake deploy</code>后也是讲public的内容推送到服务器上，我们最终访问到的也是public的内容。这个目录中的内容一般不用我们手动修改，执行<code>rake generate</code>来生成。</p></li>
</ul>


<!--more-->


<h2>基本设置</h2>

<p>在Octopress目录中有一个名为_config.yml的文件：</p>

<p>```</p>

<p>url: <a href="http://oec2003.github.io">http://oec2003.github.io</a>                       #网站地址
title: 冯威的个人博客                                #网站标题
subtitle: 临渊羡鱼 不如退而结网.                      #网站副标题
author: 冯威                                        #网站作者，通常显示在页尾和每篇文章的尾部
simple_search: <a href="http://google.com/search">http://google.com/search</a>            # 搜索引擎
description:                                       #网站的描述，出现在HTML页面中的 meta 中的 description</p>

<p>```</p>

<p>在使用<code>rake new_post['title']</code>生成的markdown文件中，可以对每篇博文进行一些设置：</p>

<p>```</p>

<p>layout: post                                                       <br/>
title: &ldquo;我的第一篇Octopress博客&rdquo;                    #文章标题
date: 2013-05-26 18:49                            #文章发布时间
comments: true                                    #是否允许评论
categories: Octopress                             #文章分类</p>

<p>```</p>

<h2>设置网站的description和keywords</h2>

<p>在网页的head部分设置name为description和keywords的meta元素可以让网页更容易被搜索引擎搜索到，下面说说怎样在Octopress中设置首页和每篇博文的description和keywords。</p>

<h3>设置首页</h3>

<p>打开<code>source/index.html</code>文件，在文件的头部添加相应内容：</p>

<p>```</p>

<p>layout: default<br/>
description: &ldquo;冯威的个人博客&rdquo;
keywords: Asp.Net,C#</p>

<p>```</p>

<h3>设置文章</h3>

<p>文章的设置直接在每篇文章对应的<code>markdown</code>文件的头部添加相应内容积即可：</p>

<p>```</p>

<p>layout: post
title: &ldquo;我的第一篇Octopress博客&rdquo;
date: 2013-05-26 18:49
comments: true
categories: Octopress
description: &ldquo;我的第一篇Octopress博客&rdquo;
keywords: Octopress</p>

<p>```</p>

<h2>导航栏设置</h2>

<p>打开文件<code>source\_includes\custom\navigation.html</code>，默认情况下如下所示：</p>

<p>```</p>

<ul class="main-navigation"> 
  <li><a href="/">Blog</a></li> 
  <li><a href="/blog/archives">Archives</a></li> 
</ul>


<p>```</p>

<p>可以将Blog和Archives修改为首页和归档，不过记得将包含有中文的文件保存为无BOM的UTF-8编码格式。也可以在此添加一个标签页，比如加上一个关于，我们可以按下面步骤实现：</p>

<ol>
<li><p>使用命令<code>rake new_page['about']</code>创建一个页面，页面路径为<code>source\about\index.markdown</code>;</p></li>
<li><p>修改上面的<code>navigation.html</code>为：</p></li>
</ol>


<p>```</p>

<ul class="main-navigation"> 
  <li><a href="/">首页</a></li> 
  <li><a href="/blog/archives">归档</a></li> 
  <li><a href="/about">关于</a></li> 
</ul>


<p>```</p>

<h2>添加侧边栏文章分类</h2>

<p>我们知道在文章的<code>markdown</code>文件中有一个<code>categories</code>可以进行设置文章的分类，设置了<code>categories</code>的文章在文章的尾部会显示分类的链接，如果想在侧边栏中展示所有的分类，可以按以下步骤进行：</p>

<ol>
<li>在<code>plugins</code>目录中创建<code>category_list_tag.rb</code>文件，文件内容如下：</li>
</ol>


<p>```</p>

<p>module Jekyll
  class CategoryListTag &lt; Liquid::Tag</p>

<pre><code>def render(context) 
  html = "" 
  categories = context.registers[:site].categories.keys 
  categories.sort.each do |category| 
    posts_in_category = context.registers[:site].categories[category].size 
    category_dir = context.registers[:site].config['category_dir'] 
    category_url = File.join(category_dir, category.gsub(/_|\P{Word}/, '-').gsub(/-{2,}/, '-').downcase) 
    html &lt;&lt; "&lt;li class='category'&gt;&lt;a href='http://oec2003.github.io/#{category_url}/'&gt;#{category} (#{posts_in_category})&lt;/a&gt;&lt;/li&gt;\n" 
  end 
  html 
end 
</code></pre>

<p>  end
end</p>

<p>Liquid::Template.register_tag(&lsquo;category_list&rsquo;, Jekyll::CategoryListTag)</p>

<p>```</p>

<ol>
<li>添加<code>source/_includes/asides/category_list.html</code>文件，内容如下：</li>
</ol>


<p>```</p>

<p><section>
  <h1>文章分类</h1>
  <ul id="categories"></p>

<pre><code>{\% category_list \%} 
</code></pre>

<p>  </ul>
</section></p>

<p>```</p>

<p>再次强调，文件中含有中文需要保存为无BOM的UTF-8格式</p>

<ol>
<li>修改<code>_config.yml</code>文件，在<code>default_asides</code>项中添加<code>asides/category_list.html</code>，值之间以逗号隔开。</li>
</ol>


<p>```
default_asides: [asides/category_list.html, asides/recent_posts.html]</p>

<p>```</p>

<p>如果想将最新文章的<code>Recent Posts</code>修改为中文，修改<code>source\_includes\asides\recent_posts.html</code>即可。</p>

<p>在侧边栏中还可以添加其他的一些组件，如新浪微博、我的豆瓣、最新评论、标签云等，添加页面以及让其显示的方法和上面类似，只是在内容取值有所差别。</p>

<h2>添加评论</h2>

<p>Octopress自身不支持评论功能，不过我们可以使用第三方的评论系统，国外的有<a href="http://www.disqus.com/">Disqus</a>，国内的有<a href="http://dev.duoshuo.com/">多说</a>等。下面介绍怎样在Octopress中使用<a href="http://www.disqus.com/">Disqus</a>。</p>

<p>首先需要在Disqus注册一个账号，登录后点击Dashboard，然后添加站点信息</p>

<p><img src="http://ww3.sinaimg.cn/mw690/3cefded1gw1e55j3dgu4zj20g008vt97.jpg" alt="" /></p>

<p>然后在<code>_config.yml</code>文件中进行下面设置</p>

<p>```</p>

<p># Disqus Comments
disqus_short_name: oec2003  # oec2003为添加站点信息时的Site Shortname
disqus_show_comment_count: true</p>

<p>```</p>

<p>添加版权声明
这里所说的版权声明是指每篇文章后面的版权信息</p>

<p>首先<code>source\_includes\post</code>目录中添加<code>license.html</code>文件，文件内容如下：</p>

<p>```</p>

<p>{\% if site.post_license  \%}</p>

<DIV style="font-size:12px;BORDER-BOTTOM: #bbbbbb 1px solid; BORDER-LEFT: #bbbbbb 1px solid; BACKGROUND: #f6f6f6; HEIGHT: 120px; BORDER-TOP: #bbbbbb 1px solid; BORDER-RIGHT: #bbbbbb 1px solid" class=oec2003right>
<DIV style="MARGIN-TOP: 10px; FLOAT: left; MARGIN-LEFT: 5px; MARGIN-RIGHT: 10px">
<IMG alt="" src="http://images.cnblogs.com/cnblogs_com/oec2003/219566/r_fw90100.jpg" width=90 height=100></DIV>
<DIV style="LINE-HEIGHT: 200%; MARGIN-TOP: 10px; COLOR: #000000">
作者： <A href="http://oec2003.github.io/">冯威</A> <BR>
出处： <A href="http://oec2003.github.io/">http://oec2003.github.io/</A> 
<BR>本文基于<a target="_blank" title="Creative Commons Attribution 2.5 China Mainland License" href="http://creativecommons.org/licenses/by/2.5/cn/">
署名 2.5 中国大陆</a>许可协议发布，欢迎转载，演绎或用于商业目的，但是必须保留本文的署名
<a href="http://oec2003.github.io/">冯威</a>（包含链接）。 </DIV></DIV>


<p>{\% endif \%}</p>

<p>```</p>

<p>在sass\custom_styles.scss添加如下样式信息来控制版权信息的样式</p>

<p>```</p>

<p>.oec2003right
{</p>

<pre><code>background: #C3D9FF;
height:120px;
border:1px solid #BBBBBB;
</code></pre>

<p>}</p>

<p>.oec2003right a:link
{</p>

<pre><code>color: #0057b6;
text-decoration: none;
</code></pre>

<p>}
.oec2003right a:visited
{</p>

<pre><code>color: #0057b6;
text-decoration: none;
</code></pre>

<p>}
.oec2003right a:active,a:hover
{</p>

<pre><code>color: #0057b6;
text-decoration: underline;
</code></pre>

<p>}</p>

<p>```</p>

<p>修改文件source_layouts\post.html</p>

<p><img src="http://ww4.sinaimg.cn/mw690/3cefded1gw1e56mhiqymaj20e306zaap.jpg" alt="" /></p>

<p>在_config.yml添加配置项用来控制是否显示页面的版权信息</p>

<p>```</p>

<p># Post License
post_license: true</p>

<p>```</p>

<p>最终展示效果：</p>

<p><img src="http://ww1.sinaimg.cn/mw690/3cefded1gw1e56nxa3e7mj20mp04vq3l.jpg" alt="" /></p>

<h2>使文章以摘要形式展示</h2>

<p>默认情况下在博客的首页是显示每篇文章的全部内容，更多时候我们只想在首页展示文章的一部分内容，当点击阅读全文时进入到文章的详细页面，在Octopress中可以很轻松实现该功能：</p>

<ol>
<li><p>在文章对应的markdown文件中，在需要显示在首页的文字后面添加&lt;!—more—>，执行rake generate后在首页上会看到只显示&lt;!—more—>前面的文字，文字后面会显示Read on链接，点击后进入文字的详细页面;</p></li>
<li><p>如果想将Read on 修改为中文，可以修改_config.yml文件</p></li>
</ol>


<p>```</p>

<p>excerpt_link: &ldquo;阅读全文&rarr;&rdquo;  # &ldquo;Continue reading&rdquo; link text at the bottom of excerpted articles</p>

<p>```</p>

<h2>几个参考</h2>

<h3>添加最新评论到侧边栏</h3>

<p><a href="http://yanping.me/cn/blog/2012/02/07/comment-sidebar/">http://yanping.me/cn/blog/2012/02/07/comment-sidebar/</a></p>

<h3>添加标签云</h3>

<p><a href="http://codemacro.com/2012/07/18/add-tag-to-octopress/">http://codemacro.com/2012/07/18/add-tag-to-octopress/</a></p>

<h2>总结</h2>

<p>其实所谓的设置都是去修改Octopress的源文件的一些内容，或是根据Octopress的文件组织方式去添加一些页面等，将Octopress的每个文件都打开看看基本就了解个大概了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows下搭建Octopress博客]]></title>
    <link href="http://oec2003.github.io/blog/2013/05/26/how-to-crate-octopress-blog-in-windows/"/>
    <updated>2013-05-26T21:21:00+08:00</updated>
    <id>http://oec2003.github.io/blog/2013/05/26/how-to-crate-octopress-blog-in-windows</id>
    <content type="html"><![CDATA[<h2>您需要掌握的</h2>

<ul>
<li><p>使用<a href="http://octopress.org/">Octopress</a>来搭建博客，还是有一定门槛的，看完本文后，希望您不会觉得很难。</p></li>
<li><p><a href="http://octopress.org/">Octopress</a> 是一款基于 Jekyll 的静态站点生成系统，使用Ruby实现，所以您需要懂点Ruby的知识，其实会几个命令就行；</p></li>
<li><p><a href="http://octopress.org/">Octopress</a>的博客内容是通过Markdown来书写，所以您需要了解Markdown的编写规则，<a href="http://wowubuntu.com/markdown/">Markdown 语法说明</a>可以让你在几分钟之内熟悉Markdown的语法，在Windows下可以使用<a href="http://www.markdownpad.com/">MarkDown Pad</a>或是使用在线的编辑器<a href="http://mahua.jser.me/" title="http://mahua.jser.me/">http://mahua.jser.me/</a>进行编辑；</p></li>
<li><p>Octopress通常会部署在GitHub上，所以您需要会一些简单的Git命令以及Gtihub的使用。</p></li>
</ul>


<h2>准备</h2>

<ul>
<li><p>系统：Windows 2003 Server、Windows 7、Windows 2008R2 Server，这三个系统用下面的版本都安装成功过；</p></li>
<li><p>Git：<a href="http://msysgit.googlecode.com/files/Git-1.8.1.2-preview20130201.exe" title="http://msysgit.googlecode.com/files/Git-1.8.1.2-preview20130201.exe">http://msysgit.googlecode.com/files/Git-1.8.1.2-preview20130201.exe</a></p></li>
<li><p>Ruby：<a href="http://files.rubyforge.vm.bytemark.co.uk/rubyinstaller/rubyinstaller-1.9.3-p429.exe" title="http://files.rubyforge.vm.bytemark.co.uk/rubyinstaller/rubyinstaller-1.9.3-p429.exe">http://files.rubyforge.vm.bytemark.co.uk/rubyinstaller/rubyinstaller-1.9.3-p429.exe</a></p></li>
<li><p>DevKit：<a href="http://cloud.github.com/downloads/oneclick/rubyinstaller/DevKit-tdm-32-4.5.2-20111229-1559-sfx.exe" title="http://cloud.github.com/downloads/oneclick/rubyinstaller/DevKit-tdm-32-4.5.2-20111229-1559-sfx.exe">http://cloud.github.com/downloads/oneclick/rubyinstaller/DevKit-tdm-32-4.5.2-20111229-1559-sfx.exe</a></p></li>
<li><p>Python：<a href="http://www.python.org/ftp/python/2.7.5/python-2.7.5.msi" title="http://www.python.org/ftp/python/2.7.5/python-2.7.5.msi">http://www.python.org/ftp/python/2.7.5/python-2.7.5.msi</a></p></li>
<li><p>Octopress：git://github.com/imathis/octopress.git</p></li>
</ul>


<!--more-->


<h2>安装</h2>

<h3>安装Git</h3>

<p>Windows下安装Git很简单，一路next就可以了。</p>

<h3>安装Ruby</h3>

<p>Ruby的安装也是一路next就可以，不过记得勾选<code>Add Ruby executables to your PATH</code>，将Ruby的执行路径加入到环境变量中，如果忘记勾选，也可以手动设置。安装完后可以在命令提示符中输入<code>ruby –version</code> 来确认是否安装成功。</p>

<h3>安装DevKit</h3>

<p>DevKit下载下来的是一个自压缩文件，我们将其解压到<code>D:/DevKit</code>，有两点需要注意：</p>

<ol>
<li><p>解压目录中没有有中文和空格；</p></li>
<li><p>必须先安装Ruby，而且Ruby需要是RubyInstallser安装。</p></li>
</ol>


<p>解压DevKit后，在命令行输入以下命令来进行安装：
<code>
d:
cd DevKit
ruby dk.rb init
ruby dk.rb install
</code></p>

<h3>安装Python</h3>

<p>安装Python,也是一路next就可以，博客的代码高亮用到了Python的Pygments模块，在Python中安装第三方库需要使用easy_install，在下面地址下载跟Python相对应的安装程序安装后就可以使用easy_install了。</p>

<p><a href="https://pypi.python.org/pypi/setuptools" title="https://pypi.python.org/pypi/setuptools">https://pypi.python.org/pypi/setuptools</a></p>

<p>easy_install会安装在Python安装目录的Scripts目录中，例如我的Python目录是<code>C:\Python27</code>，所以需要将<code>C:\Python27\Scripts</code>目录加入到环境变量中才能在命令提示符中使用easy_install命令。</p>

<p>在命令提示符中输入如下命令就可以安装Pygments了。</p>

<p><code>
easy_install pygments
</code></p>

<h3>安装Octopress</h3>

<p>首先在GitBash中输入如下命令将Octopress代码拉到本地，</p>

<p><code>
cd d:/GitProject
git clone git://github.com/imathis/octopress.git octopress
</code></p>

<p>然后需要安装Octopress的依赖项，安装依赖项需要用到Ruby的gem，使用下面的命令可以更换gem的更新源，使用国内的淘宝镜像速度相对快点。</p>

<p><code>
gem sources -a http://ruby.taobao.org/
gem sources -r http://rubygems.org/
gem sources -l
</code></p>

<p>修改Octopress目录下的Gemfile文件，将第一行的<code>http://rubygems.org/</code> 修改为<code>http://ruby.taobao.org/</code></p>

<p>在命令提示符中进入到Octopress目录，输入下面命令进行依赖项的安装</p>

<p><code>
gem install bundler
bundle install
</code></p>

<p>输入下面的命令来安装Octopress的默认主题</p>

<p><code>
rake install
</code></p>

<p>到此所有的安装工作已经结束，输入下面的命令可以在本地进行预览。</p>

<p><code>
rake preview
</code></p>

<p><img src="http://ww2.sinaimg.cn/mw690/3cefded1gw1e52yy7oi85j20lx08taaz.jpg" alt="Octopress" /></p>

<h2>解决中文问题</h2>

<p>如果博客中包含中文，需要进行如下设置：</p>

<ol>
<li>在环境变量中设置下面的键值对；</li>
</ol>


<p><code>
LANG=zh_CN.UTF-8
LC_ALL=zh_CN.UTF-8
</code></p>

<ol>
<li><p>含有中文的文件需要保存为UTF-8无BOM格式编码。</p></li>
<li><p>在Ruby的安装路径找到 文件convertible.rb</p></li>
</ol>


<p><code>C:\Ruby193\lib\ruby\gems\1.9.1\gems\jekyll-0.12.0\lib\jekyll\convertible.rb</code></p>

<p>将27行修改为：<code>self.content = File.read(File.join(base, name), :encoding =&gt; 'utf-8')</code></p>

<h2>在Octopress中添加文章</h2>

<p>使用下面命令可以在Octopress中添加文章</p>

<p><img src="http://ww2.sinaimg.cn/mw690/3cefded1gw1e52yy8dmzcj20hm01taa5.jpg" alt="addpost" /></p>

<p><strong>注意，<code>rake new_post['my first octopress blog']</code>中的<code>my first octopress blog</code> 并不是博客标题，而是和生成的文件名以及url地址有关，该名称不支持中文。博客标题可以在生成的markdown文件中修改。生成的markdown文件在<code>octopress/source/_posts</code>目录中。 </strong></p>

<p>编辑markdown文件，将标题可以修改为中文标题，还可以设置分类等信息以及编写正文部分</p>

<p><img src="http://ww4.sinaimg.cn/mw690/3cefded1gw1e52yy94hbij20cp06ljrx.jpg" alt="content" /></p>

<p>每次执行了添加博客的命令，或是修改了现有博客的内容后，都要执行下面命令进行重新生成</p>

<p><code>
rake generate
</code></p>

<p>如果之前有输入<code>rake preview</code>的命令提示符窗口没关，可以直接<code>localhost:4000</code>来进行预览，否则需要重新执行下<code>rake preview</code>才能进行预览。</p>

<h2>将Octopress发布到Github</h2>

<p>首先需要您有一个Github的账号，并且知道怎么样将Git项目推送到Github上，具体配置可以参考我之前的博文《<a href="http://www.cnblogs.com/oec2003/archive/2012/02/06/2741993.html">Windows 下使用Git管理Github项目</a>》</p>

<p>登录到Github，创建一个名为<code>username.github.com的repository</code>，例如我创建的为<code>oec2003.github.com</code>；</p>

<p>在命令提示符中进入到Octopress目录，输入下面命令：</p>

<p><code>
rake setup_github_pages
</code></p>

<p>按照提示输入新建的repository的地址，例如我的地址为：</p>

<p><code>
git@github.com:oec2003/oec2003.github.com.git
</code></p>

<p>执行命令<code>rake deploy</code> 就可以将本地的内容发布到Github上。</p>

<p>最后需要将Octopress的源文件推送到Github的Source分支上，执行下面命令即可：</p>

<p><code>
git add .
git commit -m “your message”
git push origin source
</code></p>

<h2>总结</h2>

<p>如果喜欢写博客有很多的平台可以选择，像博客园就是Net平台下很好的博客平台，如果想搭建自己的个人博客有独立的域名，WordPress是不错的选择，如果您喜欢折腾，不妨试试Octopress。在环境搭建好的情况下，使用Octopress写博客大致有一下几个步骤：</p>

<ol>
<li><p>执行<code>rake new_post['title']</code>来生成一个博文；</p></li>
<li><p>找对生成的markdown文件，编辑内容，当然是使用markdown语法来编辑；</p></li>
<li><p>执行<code>rake generate</code>来生成文章；</p></li>
<li><p>执行<code>rake preview</code>在本地预览；</p></li>
<li><p>执行<code>rake deploy</code>发布到Github中。</p></li>
</ol>


<p>在安装的过程中可能会碰到各种问题，根据错误提示信息google，肯定会找到答案。</p>

<p>最后推荐一个安装Octopress的视频：</p>

<p><a href="http://happycasts.net/episodes/36?autoplay=true" title="http://happycasts.net/episodes/36?autoplay=true">http://happycasts.net/episodes/36?autoplay=true</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My First Blog For Octopress]]></title>
    <link href="http://oec2003.github.io/blog/2013/05/22/my-first-blog-for-octopress/"/>
    <updated>2013-05-22T22:23:00+08:00</updated>
    <id>http://oec2003.github.io/blog/2013/05/22/my-first-blog-for-octopress</id>
    <content type="html"><![CDATA[<p>欢迎访问我的Octopress博客！</p>

<p><code>js
alert("欢迎访问我的Octopress博客！");
</code></p>

<p><code>html
&lt;html&gt;&lt;head&gt;欢迎访问我的Octopress博客！&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;
</code></p>

<p><code>c#
System.Console.WriteLine("欢迎访问我的Octopress博客！");
</code></p>
]]></content>
  </entry>
  
</feed>
