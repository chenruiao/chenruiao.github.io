<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[冯威的个人博客]]></title>
  <link href="http://oec2003.github.io/atom.xml" rel="self"/>
  <link href="http://oec2003.github.io/"/>
  <updated>2014-04-06T15:33:14+08:00</updated>
  <id>http://oec2003.github.io/</id>
  <author>
    <name><![CDATA[冯威]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Windows中搭建已存在的Octopress环境]]></title>
    <link href="http://oec2003.github.io/blog/2013/08/10/how-to-use-exist-octopress-in-windows/"/>
    <updated>2013-08-10T08:54:00+08:00</updated>
    <id>http://oec2003.github.io/blog/2013/08/10/how-to-use-exist-octopress-in-windows</id>
    <content type="html"><![CDATA[<p>当我们需要在不同的电脑上来对同一个Octopress博客进行维护的时候就需要针对已存在的Octopress来设置环境了，</p>

<h2>安装相应的软件：</h2>

<ol>
<li>Git：<a href="http://msysgit.googlecode.com/files/Git-1.8.1.2-preview20130201.exe">http://msysgit.googlecode.com/files/Git-1.8.1.2-preview20130201.exe </a></li>
<li>Ruby：<a href="http://files.rubyforge.vm.bytemark.co.uk/rubyinstaller/rubyinstaller-1.9.3-p429.exe">http://files.rubyforge.vm.bytemark.co.uk/rubyinstaller/rubyinstaller-1.9.3-p429.exe</a></li>
<li>DevKit：<a href="http://cloud.github.com/downloads/oneclick/rubyinstaller/DevKit-tdm-32-4.5.2-20111229-1559-sfx.exe">http://cloud.github.com/downloads/oneclick/rubyinstaller/DevKit-tdm-32-4.5.2-20111229-1559-sfx.exe</a></li>
<li>Python：<a href="http://www.python.org/ftp/python/2.7.5/python-2.7.5.msi">http://www.python.org/ftp/python/2.7.5/python-2.7.5.msi</a></li>
</ol>


<p>关于软件的安装在《<a href="http://www.cnblogs.com/oec2003/archive/2013/05/27/3100896.html">Windows下搭建Octopress博客</a>》中有详细的介绍。</p>

<!--more-->


<h2>拉Octopress代码到本地</h2>

<p>使用下面命令将已存在的Octopress代码拉到本地</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone -b source git@github.com:oec2003/oec2003.github.com.git
</span><span class='line'>git clone  git@github.com:oec2003/oec2003.github.com.git _deploy
</span></code></pre></td></tr></table></div></figure>


<h2>编写文章</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd Octopress
</span><span class='line'>rake new_post['new post title']
</span><span class='line'>rake generate
</span><span class='line'>rake preview
</span><span class='line'>rake deploy
</span></code></pre></td></tr></table></div></figure>


<h2>推送到github</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd Octopress
</span><span class='line'>git add .
</span><span class='line'>git commit -m 'message'
</span><span class='line'>git push origin source
</span></code></pre></td></tr></table></div></figure>


<h2>从github上获取最新</h2>

<p>比如在公司发布了一篇博文，回到家里想继续发博文，就需要先将github上的最新代码拉到本地：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd Octopress
</span><span class='line'>cd _deploy
</span><span class='line'>git pull origin master
</span><span class='line'>cd ..
</span><span class='line'>git pull origin source
</span></code></pre></td></tr></table></div></figure>


<p>今天在家里的另一台电脑上进行生成文章时，发现当执行了命令<code>rake generate</code> 后，生成到public目录中相应的页面为空，没有任何内容，但在命令行中命令还是正常执行了，没有出现异常。最后查出原因是因为Python的安装目录没有添加到环境变量中。所以建议在准备环境时就就将git、ruby、python的安装目录都添加到环境变量中。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows7给C盘扩容]]></title>
    <link href="http://oec2003.github.io/blog/2013/07/13/set-disk-c-for-windows7/"/>
    <updated>2013-07-13T19:56:00+08:00</updated>
    <id>http://oec2003.github.io/blog/2013/07/13/set-disk-c-for-windows7</id>
    <content type="html"><![CDATA[<p>在之前的系统中都是使用<code>PartitionMagic</code>来进行磁盘容量的分配，但<code>PartitionMagic</code>在<code>Windows7</code>中的兼容性不是好很好，导致不能使用。其实<code>Windows7</code>自带了磁盘管理工具，下面说说怎样使用自带的磁盘管理工具进行C盘的扩容。</p>

<ol>
<li>将D盘的文件转移到其他的地方；</li>
<li>使用<a href="http://www.diskgenius.cn/">DiskGenius</a>将D盘转换成主分区，如果你的D盘已经是主分区，这一步可以省略；</li>
<li>删除D盘分区；</li>
<li>打开磁盘管理（计算机右键-》管理-》磁盘管理），在C盘分区上点击右键，这时扩展卷是激活状态，根据向导就可以实现C盘的扩容了。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress博客设置]]></title>
    <link href="http://oec2003.github.io/blog/2013/06/26/octopress-blog-setting/"/>
    <updated>2013-06-26T22:02:00+08:00</updated>
    <id>http://oec2003.github.io/blog/2013/06/26/octopress-blog-setting</id>
    <content type="html"><![CDATA[<p>在上一篇《<a href="http://oec2003.github.io/blog/2013/05/26/how-to-crate-octopress-blog-in-windows/">Windows下搭建Octopress博客</a>》中介绍了怎样在Windows环境中搭建Octopress博客，以及如何部署到Github中，本文主要讲解怎样对Octopress进行一些设置，比如修改博客标题、添加侧边栏等等。</p>

<h2>Octopress文件目录</h2>

<p>首先来看下Octopress的文件目录吧，因为很多的设置就是从这里开始的。</p>

<p><img src="http://ww1.sinaimg.cn/mw690/3cefded1gw1e52yyb8jz7j207f0e5mxp.jpg" alt="" /></p>

<p>刚clone下来的Octopress源码没有最后的三个文件，当执行了rake install后会产生最后的三个目录。</p>

<ul>
<li><p>source：该目录是执行<code>rake install</code>后从<code>.themes\classic</code>目录中的source拷贝而来，并且添加了一个<em>posts目录了，当执行了<code>rake new_post['title']</code>后会在</em>post生成博文的markdown文件。包括后面的很多设置页是在该目录中进行；</p></li>
<li><p>sass：也是在执行<code>rake install</code>后从<code>.themes\classic</code>目录中的source拷贝而来。Sass 扩展了 CSS3，增加了规则、变量、混入、选择器、继承等等特性。Sass 生成良好格式化的 CSS 代码，易于组织和维护。</p></li>
<li><p>public：刚clone源码时public是个空目录，当执行了<code>rake generate</code>后会编译source的内容然后将编译后的内容复制到public目录中，在执行<code>rake deploy</code>后也是讲public的内容推送到服务器上，我们最终访问到的也是public的内容。这个目录中的内容一般不用我们手动修改，执行<code>rake generate</code>来生成。</p></li>
</ul>


<!--more-->


<h2>基本设置</h2>

<p>在Octopress目录中有一个名为_config.yml的文件：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>url: http://oec2003.github.io                       #网站地址 
</span><span class='line'>title: 冯威的个人博客                                #网站标题 
</span><span class='line'>subtitle: 临渊羡鱼 不如退而结网.                      #网站副标题 
</span><span class='line'>author: 冯威                                        #网站作者，通常显示在页尾和每篇文章的尾部 
</span><span class='line'>simple_search: http://google.com/search            # 搜索引擎 
</span><span class='line'>description:                                       #网站的描述，出现在HTML页面中的 meta 中的 description
</span></code></pre></td></tr></table></div></figure>


<p>在使用<code>rake new_post['title']</code>生成的markdown文件中，可以对每篇博文进行一些设置：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>layout: post                                                         
</span><span class='line'>title: "我的第一篇Octopress博客"                    #文章标题 
</span><span class='line'>date: 2013-05-26 18:49                            #文章发布时间 
</span><span class='line'>comments: true                                    #是否允许评论 
</span><span class='line'>categories: Octopress                             #文章分类 
</span></code></pre></td></tr></table></div></figure>


<h2>设置网站的description和keywords</h2>

<p>在网页的head部分设置name为description和keywords的meta元素可以让网页更容易被搜索引擎搜索到，下面说说怎样在Octopress中设置首页和每篇博文的description和keywords。</p>

<h3>设置首页</h3>

<p>打开<code>source/index.html</code>文件，在文件的头部添加相应内容：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>layout: default  
</span><span class='line'>description: "冯威的个人博客" 
</span><span class='line'>keywords: Asp.Net,C# 
</span></code></pre></td></tr></table></div></figure>


<h3>设置文章</h3>

<p>文章的设置直接在每篇文章对应的<code>markdown</code>文件的头部添加相应内容积即可：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>layout: post 
</span><span class='line'>title: "我的第一篇Octopress博客" 
</span><span class='line'>date: 2013-05-26 18:49 
</span><span class='line'>comments: true 
</span><span class='line'>categories: Octopress 
</span><span class='line'>description: "我的第一篇Octopress博客" 
</span><span class='line'>keywords: Octopress 
</span></code></pre></td></tr></table></div></figure>


<h2>导航栏设置</h2>

<p>打开文件<code>source\_includes\custom\navigation.html</code>，默认情况下如下所示：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>&lt;ul class="main-navigation"&gt; 
</span><span class='line'>  &lt;li&gt;&lt;a href="http://oec2003.github.io/"&gt;Blog&lt;/a&gt;&lt;/li&gt; 
</span><span class='line'>  &lt;li&gt;&lt;a href="http://oec2003.github.io/blog/archives"&gt;Archives&lt;/a&gt;&lt;/li&gt; 
</span><span class='line'>&lt;/ul&gt;
</span></code></pre></td></tr></table></div></figure>


<p>可以将Blog和Archives修改为首页和归档，不过记得将包含有中文的文件保存为无BOM的UTF-8编码格式。也可以在此添加一个标签页，比如加上一个关于，我们可以按下面步骤实现：</p>

<ol>
<li><p>使用命令<code>rake new_page['about']</code>创建一个页面，页面路径为<code>source\about\index.markdown</code>;</p></li>
<li><p>修改上面的<code>navigation.html</code>为：</p></li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>&lt;ul class="main-navigation"&gt; 
</span><span class='line'>  &lt;li&gt;&lt;a href="http://oec2003.github.io/"&gt;首页&lt;/a&gt;&lt;/li&gt; 
</span><span class='line'>  &lt;li&gt;&lt;a href="http://oec2003.github.io/blog/archives"&gt;归档&lt;/a&gt;&lt;/li&gt; 
</span><span class='line'>  &lt;li&gt;&lt;a href="http://oec2003.github.io/about"&gt;关于&lt;/a&gt;&lt;/li&gt; 
</span><span class='line'>&lt;/ul&gt;
</span></code></pre></td></tr></table></div></figure>


<h2>添加侧边栏文章分类</h2>

<p>我们知道在文章的<code>markdown</code>文件中有一个<code>categories</code>可以进行设置文章的分类，设置了<code>categories</code>的文章在文章的尾部会显示分类的链接，如果想在侧边栏中展示所有的分类，可以按以下步骤进行：</p>

<ol>
<li>在<code>plugins</code>目录中创建<code>category_list_tag.rb</code>文件，文件内容如下：</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>module Jekyll 
</span><span class='line'>  class CategoryListTag &lt; Liquid::Tag 
</span><span class='line'>    def render(context) 
</span><span class='line'>      html = "" 
</span><span class='line'>      categories = context.registers[:site].categories.keys 
</span><span class='line'>      categories.sort.each do |category| 
</span><span class='line'>        posts_in_category = context.registers[:site].categories[category].size 
</span><span class='line'>        category_dir = context.registers[:site].config['category_dir'] 
</span><span class='line'>        category_url = File.join(category_dir, category.gsub(/_|\P{Word}/, '-').gsub(/-{2,}/, '-').downcase) 
</span><span class='line'>        html &lt;&lt; "&lt;li class='category'&gt;&lt;a href='http://oec2003.github.io/#{category_url}/'&gt;#{category} (#{posts_in_category})&lt;/a&gt;&lt;/li&gt;\n" 
</span><span class='line'>      end 
</span><span class='line'>      html 
</span><span class='line'>    end 
</span><span class='line'>  end 
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>Liquid::Template.register_tag('category_list', Jekyll::CategoryListTag)
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>添加<code>source/_includes/asides/category_list.html</code>文件，内容如下：</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>&lt;section&gt; 
</span><span class='line'>  &lt;h1&gt;文章分类&lt;/h1&gt; 
</span><span class='line'>  &lt;ul id="categories"&gt; 
</span><span class='line'>    {\% category_list \%} 
</span><span class='line'>  &lt;/ul&gt; 
</span><span class='line'>&lt;/section&gt;
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>再次强调，文件中含有中文需要保存为无BOM的UTF-8格式</p>

<ol>
<li>修改<code>_config.yml</code>文件，在<code>default_asides</code>项中添加<code>asides/category_list.html</code>，值之间以逗号隔开。</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>default_asides: [asides/category_list.html, asides/recent_posts.html]
</span></code></pre></td></tr></table></div></figure>


<p>如果想将最新文章的<code>Recent Posts</code>修改为中文，修改<code>source\_includes\asides\recent_posts.html</code>即可。</p>

<p>在侧边栏中还可以添加其他的一些组件，如新浪微博、我的豆瓣、最新评论、标签云等，添加页面以及让其显示的方法和上面类似，只是在内容取值有所差别。</p>

<h2>添加评论</h2>

<p>Octopress自身不支持评论功能，不过我们可以使用第三方的评论系统，国外的有<a href="http://www.disqus.com/">Disqus</a>，国内的有<a href="http://dev.duoshuo.com/">多说</a>等。下面介绍怎样在Octopress中使用<a href="http://www.disqus.com/">Disqus</a>。</p>

<p>首先需要在Disqus注册一个账号，登录后点击Dashboard，然后添加站点信息</p>

<p><img src="http://ww3.sinaimg.cn/mw690/3cefded1gw1e55j3dgu4zj20g008vt97.jpg" alt="" /></p>

<p>然后在<code>_config.yml</code>文件中进行下面设置</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>\# Disqus Comments 
</span><span class='line'>disqus_short_name: oec2003  \# oec2003为添加站点信息时的Site Shortname 
</span><span class='line'>disqus_show_comment_count: true
</span></code></pre></td></tr></table></div></figure>


<p>添加版权声明
这里所说的版权声明是指每篇文章后面的版权信息</p>

<p>首先<code>source\_includes\post</code>目录中添加<code>license.html</code>文件，文件内容如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>{\% if site.post_license  \%}
</span><span class='line'>
</span><span class='line'>&lt;DIV style="font-size:12px;BORDER-BOTTOM: #bbbbbb 1px solid; BORDER-LEFT: #bbbbbb 1px solid; BACKGROUND: #f6f6f6; HEIGHT: 120px; BORDER-TOP: #bbbbbb 1px solid; BORDER-RIGHT: #bbbbbb 1px solid" class=oec2003right&gt;
</span><span class='line'>&lt;DIV style="MARGIN-TOP: 10px; FLOAT: left; MARGIN-LEFT: 5px; MARGIN-RIGHT: 10px"&gt;
</span><span class='line'>&lt;IMG alt="" src="http://images.cnblogs.com/cnblogs_com/oec2003/219566/r_fw90100.jpg" width=90 height=100&gt;&lt;/DIV&gt;
</span><span class='line'>&lt;DIV style="LINE-HEIGHT: 200%; MARGIN-TOP: 10px; COLOR: #000000"&gt;
</span><span class='line'>作者： &lt;A href="http://oec2003.github.io/"&gt;冯威&lt;/A&gt; &lt;BR&gt;
</span><span class='line'>出处： &lt;A href="http://oec2003.github.io/"&gt;http://oec2003.github.io/&lt;/A&gt; 
</span><span class='line'>&lt;BR&gt;本文基于&lt;a target="_blank" title="Creative Commons Attribution 2.5 China Mainland License" href="http://creativecommons.org/licenses/by/2.5/cn/"&gt;
</span><span class='line'>署名 2.5 中国大陆&lt;/a&gt;许可协议发布，欢迎转载，演绎或用于商业目的，但是必须保留本文的署名
</span><span class='line'>&lt;a href="http://oec2003.github.io/"&gt;冯威&lt;/a&gt;（包含链接）。 &lt;/DIV&gt;&lt;/DIV&gt;
</span><span class='line'>
</span><span class='line'>{\% endif \%}
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>在sass\custom_styles.scss添加如下样式信息来控制版权信息的样式</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>.oec2003right
</span><span class='line'>{
</span><span class='line'>    background: #C3D9FF;
</span><span class='line'>    height:120px;
</span><span class='line'>    border:1px solid #BBBBBB;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>.oec2003right a:link 
</span><span class='line'>{
</span><span class='line'>    color: #0057b6;
</span><span class='line'>    text-decoration: none;
</span><span class='line'>}
</span><span class='line'>.oec2003right a:visited 
</span><span class='line'>{
</span><span class='line'>    color: #0057b6;
</span><span class='line'>    text-decoration: none;
</span><span class='line'>}
</span><span class='line'>.oec2003right a:active,a:hover
</span><span class='line'>{
</span><span class='line'>    color: #0057b6;
</span><span class='line'>    text-decoration: underline;
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>


<p>修改文件source_layouts\post.html</p>

<p><img src="http://ww4.sinaimg.cn/mw690/3cefded1gw1e56mhiqymaj20e306zaap.jpg" alt="" /></p>

<p>在_config.yml添加配置项用来控制是否显示页面的版权信息</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>\# Post License
</span><span class='line'>post_license: true
</span></code></pre></td></tr></table></div></figure>


<p>最终展示效果：</p>

<p><img src="http://ww1.sinaimg.cn/mw690/3cefded1gw1e56nxa3e7mj20mp04vq3l.jpg" alt="" /></p>

<h2>使文章以摘要形式展示</h2>

<p>默认情况下在博客的首页是显示每篇文章的全部内容，更多时候我们只想在首页展示文章的一部分内容，当点击阅读全文时进入到文章的详细页面，在Octopress中可以很轻松实现该功能：</p>

<ol>
<li><p>在文章对应的markdown文件中，在需要显示在首页的文字后面添加&lt;!—more—>，执行rake generate后在首页上会看到只显示&lt;!—more—>前面的文字，文字后面会显示Read on链接，点击后进入文字的详细页面;</p></li>
<li><p>如果想将Read on 修改为中文，可以修改_config.yml文件</p></li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>excerpt_link: "阅读全文&rarr;"  # "Continue reading" link text at the bottom of excerpted articles
</span></code></pre></td></tr></table></div></figure>


<h2>几个参考</h2>

<h3>添加最新评论到侧边栏</h3>

<p><a href="http://yanping.me/cn/blog/2012/02/07/comment-sidebar/">http://yanping.me/cn/blog/2012/02/07/comment-sidebar/</a></p>

<h3>添加标签云</h3>

<p><a href="http://codemacro.com/2012/07/18/add-tag-to-octopress/">http://codemacro.com/2012/07/18/add-tag-to-octopress/</a></p>

<h2>总结</h2>

<p>其实所谓的设置都是去修改Octopress的源文件的一些内容，或是根据Octopress的文件组织方式去添加一些页面等，将Octopress的每个文件都打开看看基本就了解个大概了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows下搭建Octopress博客]]></title>
    <link href="http://oec2003.github.io/blog/2013/05/26/how-to-crate-octopress-blog-in-windows/"/>
    <updated>2013-05-26T21:21:00+08:00</updated>
    <id>http://oec2003.github.io/blog/2013/05/26/how-to-crate-octopress-blog-in-windows</id>
    <content type="html"><![CDATA[<h2>您需要掌握的</h2>

<ul>
<li><p>使用<a href="http://octopress.org/">Octopress</a>来搭建博客，还是有一定门槛的，看完本文后，希望您不会觉得很难。</p></li>
<li><p><a href="http://octopress.org/">Octopress</a> 是一款基于 Jekyll 的静态站点生成系统，使用Ruby实现，所以您需要懂点Ruby的知识，其实会几个命令就行；</p></li>
<li><p><a href="http://octopress.org/">Octopress</a>的博客内容是通过Markdown来书写，所以您需要了解Markdown的编写规则，<a href="http://wowubuntu.com/markdown/">Markdown 语法说明</a>可以让你在几分钟之内熟悉Markdown的语法，在Windows下可以使用<a href="http://www.markdownpad.com/">MarkDown Pad</a>或是使用在线的编辑器<a href="http://mahua.jser.me/" title="http://mahua.jser.me/">http://mahua.jser.me/</a>进行编辑；</p></li>
<li><p>Octopress通常会部署在GitHub上，所以您需要会一些简单的Git命令以及Gtihub的使用。</p></li>
</ul>


<h2>准备</h2>

<ul>
<li><p>系统：Windows 2003 Server、Windows 7、Windows 2008R2 Server，这三个系统用下面的版本都安装成功过；</p></li>
<li><p>Git：<a href="http://msysgit.googlecode.com/files/Git-1.8.1.2-preview20130201.exe" title="http://msysgit.googlecode.com/files/Git-1.8.1.2-preview20130201.exe">http://msysgit.googlecode.com/files/Git-1.8.1.2-preview20130201.exe</a></p></li>
<li><p>Ruby：<a href="http://files.rubyforge.vm.bytemark.co.uk/rubyinstaller/rubyinstaller-1.9.3-p429.exe" title="http://files.rubyforge.vm.bytemark.co.uk/rubyinstaller/rubyinstaller-1.9.3-p429.exe">http://files.rubyforge.vm.bytemark.co.uk/rubyinstaller/rubyinstaller-1.9.3-p429.exe</a></p></li>
<li><p>DevKit：<a href="http://cloud.github.com/downloads/oneclick/rubyinstaller/DevKit-tdm-32-4.5.2-20111229-1559-sfx.exe" title="http://cloud.github.com/downloads/oneclick/rubyinstaller/DevKit-tdm-32-4.5.2-20111229-1559-sfx.exe">http://cloud.github.com/downloads/oneclick/rubyinstaller/DevKit-tdm-32-4.5.2-20111229-1559-sfx.exe</a></p></li>
<li><p>Python：<a href="http://www.python.org/ftp/python/2.7.5/python-2.7.5.msi" title="http://www.python.org/ftp/python/2.7.5/python-2.7.5.msi">http://www.python.org/ftp/python/2.7.5/python-2.7.5.msi</a></p></li>
<li><p>Octopress：git://github.com/imathis/octopress.git</p></li>
</ul>


<!--more-->


<h2>安装</h2>

<h3>安装Git</h3>

<p>Windows下安装Git很简单，一路next就可以了。</p>

<h3>安装Ruby</h3>

<p>Ruby的安装也是一路next就可以，不过记得勾选<code>Add Ruby executables to your PATH</code>，将Ruby的执行路径加入到环境变量中，如果忘记勾选，也可以手动设置。安装完后可以在命令提示符中输入<code>ruby –version</code> 来确认是否安装成功。</p>

<h3>安装DevKit</h3>

<p>DevKit下载下来的是一个自压缩文件，我们将其解压到<code>D:/DevKit</code>，有两点需要注意：</p>

<ol>
<li><p>解压目录中没有有中文和空格；</p></li>
<li><p>必须先安装Ruby，而且Ruby需要是RubyInstallser安装。</p></li>
</ol>


<p>解压DevKit后，在命令行输入以下命令来进行安装：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>d: 
</span><span class='line'>cd DevKit
</span><span class='line'>ruby dk.rb init 
</span><span class='line'>ruby dk.rb install</span></code></pre></td></tr></table></div></figure>


<h3>安装Python</h3>

<p>安装Python,也是一路next就可以，博客的代码高亮用到了Python的Pygments模块，在Python中安装第三方库需要使用easy_install，在下面地址下载跟Python相对应的安装程序安装后就可以使用easy_install了。</p>

<p><a href="https://pypi.python.org/pypi/setuptools" title="https://pypi.python.org/pypi/setuptools">https://pypi.python.org/pypi/setuptools</a></p>

<p>easy_install会安装在Python安装目录的Scripts目录中，例如我的Python目录是<code>C:\Python27</code>，所以需要将<code>C:\Python27\Scripts</code>目录加入到环境变量中才能在命令提示符中使用easy_install命令。</p>

<p>在命令提示符中输入如下命令就可以安装Pygments了。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>easy_install pygments</span></code></pre></td></tr></table></div></figure>


<h3>安装Octopress</h3>

<p>首先在GitBash中输入如下命令将Octopress代码拉到本地，</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd d:/GitProject
</span><span class='line'>git clone git://github.com/imathis/octopress.git octopress</span></code></pre></td></tr></table></div></figure>


<p>然后需要安装Octopress的依赖项，安装依赖项需要用到Ruby的gem，使用下面的命令可以更换gem的更新源，使用国内的淘宝镜像速度相对快点。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem sources -a http://ruby.taobao.org/
</span><span class='line'>gem sources -r http://rubygems.org/
</span><span class='line'>gem sources -l</span></code></pre></td></tr></table></div></figure>


<p>修改Octopress目录下的Gemfile文件，将第一行的<code>http://rubygems.org/</code> 修改为<code>http://ruby.taobao.org/</code></p>

<p>在命令提示符中进入到Octopress目录，输入下面命令进行依赖项的安装</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install bundler
</span><span class='line'>bundle install</span></code></pre></td></tr></table></div></figure>


<p>输入下面的命令来安装Octopress的默认主题</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake install</span></code></pre></td></tr></table></div></figure>


<p>到此所有的安装工作已经结束，输入下面的命令可以在本地进行预览。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake preview</span></code></pre></td></tr></table></div></figure>


<p><img src="http://ww2.sinaimg.cn/mw690/3cefded1gw1e52yy7oi85j20lx08taaz.jpg" alt="Octopress" /></p>

<h2>解决中文问题</h2>

<p>如果博客中包含中文，需要进行如下设置：</p>

<ol>
<li>在环境变量中设置下面的键值对；</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>LANG=zh_CN.UTF-8 
</span><span class='line'>LC_ALL=zh_CN.UTF-8</span></code></pre></td></tr></table></div></figure>


<ol>
<li><p>含有中文的文件需要保存为UTF-8无BOM格式编码。</p></li>
<li><p>在Ruby的安装路径找到 文件convertible.rb</p></li>
</ol>


<p><code>C:\Ruby193\lib\ruby\gems\1.9.1\gems\jekyll-0.12.0\lib\jekyll\convertible.rb</code></p>

<p>将27行修改为：<code>self.content = File.read(File.join(base, name), :encoding =&gt; 'utf-8')</code></p>

<h2>在Octopress中添加文章</h2>

<p>使用下面命令可以在Octopress中添加文章</p>

<p><img src="http://ww2.sinaimg.cn/mw690/3cefded1gw1e52yy8dmzcj20hm01taa5.jpg" alt="addpost" /></p>

<p><strong>注意，<code>rake new_post['my first octopress blog']</code>中的<code>my first octopress blog</code> 并不是博客标题，而是和生成的文件名以及url地址有关，该名称不支持中文。博客标题可以在生成的markdown文件中修改。生成的markdown文件在<code>octopress/source/_posts</code>目录中。 </strong></p>

<p>编辑markdown文件，将标题可以修改为中文标题，还可以设置分类等信息以及编写正文部分</p>

<p><img src="http://ww4.sinaimg.cn/mw690/3cefded1gw1e52yy94hbij20cp06ljrx.jpg" alt="content" /></p>

<p>每次执行了添加博客的命令，或是修改了现有博客的内容后，都要执行下面命令进行重新生成</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake generate</span></code></pre></td></tr></table></div></figure>


<p>如果之前有输入<code>rake preview</code>的命令提示符窗口没关，可以直接<code>localhost:4000</code>来进行预览，否则需要重新执行下<code>rake preview</code>才能进行预览。</p>

<h2>将Octopress发布到Github</h2>

<p>首先需要您有一个Github的账号，并且知道怎么样将Git项目推送到Github上，具体配置可以参考我之前的博文《<a href="http://www.cnblogs.com/oec2003/archive/2012/02/06/2741993.html">Windows 下使用Git管理Github项目</a>》</p>

<p>登录到Github，创建一个名为<code>username.github.com的repository</code>，例如我创建的为<code>oec2003.github.com</code>；</p>

<p>在命令提示符中进入到Octopress目录，输入下面命令：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake setup_github_pages</span></code></pre></td></tr></table></div></figure>


<p>按照提示输入新建的repository的地址，例如我的地址为：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git@github.com:oec2003/oec2003.github.com.git</span></code></pre></td></tr></table></div></figure>


<p>执行命令<code>rake deploy</code> 就可以将本地的内容发布到Github上。</p>

<p>最后需要将Octopress的源文件推送到Github的Source分支上，执行下面命令即可：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git add .
</span><span class='line'>git commit -m “your message”
</span><span class='line'>git push origin source</span></code></pre></td></tr></table></div></figure>


<h2>总结</h2>

<p>如果喜欢写博客有很多的平台可以选择，像博客园就是Net平台下很好的博客平台，如果想搭建自己的个人博客有独立的域名，WordPress是不错的选择，如果您喜欢折腾，不妨试试Octopress。在环境搭建好的情况下，使用Octopress写博客大致有一下几个步骤：</p>

<ol>
<li><p>执行<code>rake new_post['title']</code>来生成一个博文；</p></li>
<li><p>找对生成的markdown文件，编辑内容，当然是使用markdown语法来编辑；</p></li>
<li><p>执行<code>rake generate</code>来生成文章；</p></li>
<li><p>执行<code>rake preview</code>在本地预览；</p></li>
<li><p>执行<code>rake deploy</code>发布到Github中。</p></li>
</ol>


<p>在安装的过程中可能会碰到各种问题，根据错误提示信息google，肯定会找到答案。</p>

<p>最后推荐一个安装Octopress的视频：</p>

<p><a href="http://happycasts.net/episodes/36?autoplay=true" title="http://happycasts.net/episodes/36?autoplay=true">http://happycasts.net/episodes/36?autoplay=true</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My First Blog For Octopress]]></title>
    <link href="http://oec2003.github.io/blog/2013/05/22/my-first-blog-for-octopress/"/>
    <updated>2013-05-22T22:23:00+08:00</updated>
    <id>http://oec2003.github.io/blog/2013/05/22/my-first-blog-for-octopress</id>
    <content type="html"><![CDATA[<p>欢迎访问我的Octopress博客！</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">alert</span><span class="p">(</span><span class="s2">&quot;欢迎访问我的Octopress博客！&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;html&gt;&lt;head&gt;</span>欢迎访问我的Octopress博客！<span class="nt">&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="n">System</span><span class="p">.</span><span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;欢迎访问我的Octopress博客！&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[怎样提高开发效率]]></title>
    <link href="http://oec2003.github.io/blog/2012/10/21/how-to-improve-development-efficiency/"/>
    <updated>2012-10-21T06:38:00+08:00</updated>
    <id>http://oec2003.github.io/blog/2012/10/21/how-to-improve-development-efficiency</id>
    <content type="html"><![CDATA[<p>给你一个任务,限定5天内完成,如果你实际用了6天,可以说是开发效率不高,或者同样的一个任务,你花了6天,而你的同事却只用了4天,也可以说是你的开发效率不高,影响开发效率的因素有很多,下面就我个人的理解来谈谈怎样提高开发效率.</p>

<h2>工具</h2>

<p>俗话说，工欲善其事必先利其器，使用得心应手的工具必然会提高开发效率，做微软平台开发的肯定离不开VS，就VS本身来说，除了常用功能外一些常用的快捷键一定要能熟练运用，例如下面是我认为比较有用的几个快捷键：</p>

<ul>
<li>注释： Ctrl + K + C</li>
<li>取消注释： Ctrl + K + U</li>
<li>全屏： Shift + Alt + Ente</li>
<li>设置标签： CTRL + K, CTRL + K</li>
<li>下一个、上一个标签： CTRL + K, CTRL + P 、CTRL + K, CTRL + P</li>
<li>列出成员： Ctrl + J</li>
<li>显示参数信息： Ctrl + Shift + Space</li>
<li>转到定义后返回： Ctrl + &ndash;</li>
</ul>


<p>熟练使用快捷键对于代码编写的速率和跟踪代码的速率会有大大的提高。</p>

<!--more-->


<p>有时候开发工具自身的功能受到了限制，这是就需要使用插件来丰富功能，这里推荐两款插件，VS中的ReSharper和SqlServer中的SQL prompt5，ReSharper是功能很强大的一个VS插件，但会拖慢VS的速度，就看怎么去权衡了，我在之前的博文《<a href="http://blog.fwhyy.com/posts/874">强大的VS插件—Resharper</a>》做过简单介绍。SQL prompt5是SqlServer的一个插件，功能也非常强大，有很强的智能提示功能，所提供的SQL Search功能可以对数据库对象进行快速查找，还提供代码片段功能，在我之前的博文《<a href="http://blog.fwhyy.com/posts/1789">SqlServer开发利器—SQL Prompt5</a>》中也做过介绍。</p>

<p>除了我们每天都离不开的VS和SqlServer之外还有一些辅助的开发工具也可以来帮助我们来提高效率，我经常使用的有以下几种：</p>

<ul>
<li>SqlDbx：很小巧的一款数据库管理工具，但功能非常强大，支持多种数据库，经常使用他的智能提示和生成脚本等功能，但也有缺点，对中文支持的不是很好；</li>
<li>Aptana：该工具可以说是做Web开发的利器了，我有时写JS会用到该工具，有一个亮点之处是智能提示能够显示不同浏览器是否支持；</li>
<li>Free Javascript Editor：可以很方便的写一些简单的HTML和JS代码并运行，可以直接选择JS的代码片段进行执行，对JS的调试也很方便。</li>
</ul>


<p>还有一些其他的工具也非常有用，比如我在平时的工作中会经常用到Total Commander和Everything：</p>

<ul>
<li>Total Commander：资源管理器的代替工具，支持多标签，可以很方便的对文件进行操作；</li>
<li>Everything：一款搜索工具，速度奇快，以前也做过介绍《<a href="http://blog.fwhyy.com/posts/759">软件推荐：磁盘搜索软件Everything</a>》。</li>
</ul>


<h2>代码沉淀</h2>

<p>有点规模的软件公司都会有自己的开发框架，这些框架都是多少年积累的产物，目的就是为了提高开发效率，作为一个开发人员平时对于一些常用的代码也应该有自己的沉淀，不光自己沉淀，在组内也应互相分享，记录这些沉淀的代码就可以根据自己的喜好了，记事本、Word、Excel、OneNote等都可以。沉淀的代码还可以使用VS的代码片段功能来进行管理，VS2010中对代码片段支持的很好，上面提到的SqlServer的插件SQL Prompt5也提供了数据库中的代码片段功能。</p>

<p>VS中给我们提供了很多现成的代码片段，要使用自定义的代码片段最方便的就是使用代码片段制作工具，工具点击此处下载，当然也可以自己创建代码片段文件，然后在VS中导入即可，代码片段文件其实就是一个xml格式的文件，后缀为snippet。</p>

<h2>代码质量</h2>

<p>代码质量好了，产生的bug就少，和测试的交互也就少了，也就不会因为前面产生的bug而影响后面的进度，效率自然就高了。代码质量可以分三个方面来看：</p>

<ol>
<li><p>代码出错少，能够正常的运行；</p>

<ul>
<li>主动学习，提升自我的编程技能；</li>
<li>勤思考，对干过的错要经常总结，一些规范性的原则要牢记，这些常常会出现一些低级错误；</li>
<li>一个任务做完后需要进行充分的自测。</li>
</ul>
</li>
<li><p>代码的运行效率高，在大数据、高并发的时候能够高效运行；</p>

<ul>
<li>高性能的开发得从点滴做起，不放过每一个细节，可能一个小的细节点就是一个性能的瓶颈；</li>
<li>要有重构代码的习惯，好的代码是重构出来的，高性能的代码也是重构出来的；</li>
<li>多学习一些原理性的知识，不光要知其然还是知其所以然，基础扎实了，一些性能的问题就知道怎么去优化了；</li>
<li>之前翻译过几篇关于C#代码简化的博文，参见《<a href="http://blog.fwhyy.com/posts/11">C#/Net代码精简优化技巧（1）</a>》、《<a href="http://blog.fwhyy.com/posts/10">C#/Net代码精简优化技巧（2）</a>》、《<a href="http://blog.fwhyy.com/posts/9">C#/Net代码精简优化技巧（3）</a>》</li>
</ul>
</li>
<li><p>代码最后的运行结果要和客户的要求一致；</p>

<ul>
<li>做需求之前把自己的理解跟需求分析进行沟通看是否能达成一致，如果是直接和客户进行沟通可以先做出小Demo，然后给客户演示，根据反馈不断改进；</li>
<li>在做的过程中如果遇到有疑问的地方一定要和需求或客户进行沟通，不要根据自己的想法想当然的去进行代码编写；</li>
<li>必要的时候可以引导客户，我们的主要目的能以最有效的方式帮客户解决问题，不能盲目的按照客户的要求来，有时客户说需要一双雨鞋，可能一把伞就可以解决问题。同样对于需求分析写的文档，开发也需要有质疑的精神。</li>
</ul>
</li>
</ol>


<h2>业务知识学习</h2>

<p>做任何的系统都避免不了有业务背景，熟练的了解业务知识可以使我们更清楚的知道我们是在做什么。很多的开发人员可能只喜欢钻研技术，对业务往往没什么兴趣，代码写完了，可能还不知道做出的模块时做什么用的，这样写出来的代码的质量就可想而知了。</p>

<ul>
<li>学习业务可能很枯燥，但却是一劳永逸的事情，所以不管是否有兴趣，还是应该硬着头皮啃下来；</li>
<li>小组内可以成立兴趣小组，探讨的方式来进行学习，互相分享各自的学习内容，关键是组内的氛围要搞起来；</li>
<li>如果是直接跟客户沟通，需要用客户能听懂的语言，比如图文配合或是一些小Demo，否则当开发术语碰上领域术语就可能都是在对牛弹琴了。</li>
</ul>


<p>总之，作为一名开发人员，要时刻想着怎样来提高开发效率，开发效率的提高是你在工作中一个良性循环的开始。如果您有好的方法和建议，欢迎一起分享。</p>
]]></content>
  </entry>
  
</feed>
